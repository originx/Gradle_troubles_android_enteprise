// Top-level build file where you can add configuration options common to all sub-projects/modules
buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:1.1.5'
        classpath 'com.android.tools.build:gradle:3.0.0-alpha1'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.4'
        // workaround for <https://github.com/evant/gradle-retrolambda/issues/96>
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
        // keep out until https://github.com/android10/frodo/issues/9 is fixed
        classpath 'com.fernandocejas.frodo:frodo-plugin:0.8.2'
        //instrumentation paralelization runner
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
        classpath 'com.squareup.spoon:spoon-runner:1.7.0'
    }
    // use our modified version above.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
    configurations {
        androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
    }
}

ext {
    //fixme libs - the debug screens use the VERSION_NAME and VERSION_CODE data from their
    // BuildConfig, not the app's one, so right now we need this setup and have to refactor these informational
    // screens as well
    //
    //
    // The current app's version code uses a different versioncode scheme and is currently ~1,5 * 10^8,
    // but currently only raises the patch part. So to make our app an "upgrade" with the new numbering scheme,
    // we should at least start with appVersionMajor = 3 (~2,0 * 10^8)
    appVersionMajorDE = 5 // at most 15
    appVersionMinorDE = 9 // at most 63
    appVersionPatchDE = 0 // at most 127
    appVersionBuildDE = 0 // at most 16383

    appVersionMajorIT = 2 // at most 15
    appVersionMinorIT = 5 // at most 63
    appVersionPatchIT = 0 // at most 127
    appVersionBuildIT = 0 // at most 16383

    appVersionMajorMX = 3 // at most 15
    appVersionMinorMX = 5 // at most 63
    appVersionPatchMX = 0 // at most 127
    appVersionBuildMX = 0 // at most 16383


    appVersionMajorUS = 1 // at most 15
    appVersionMinorUS = 0 // at most 63
    appVersionPatchUS = 0 // at most 127
    appVersionBuildUS = 0 // at most 16383

    revision = getGitCommitHash();
    versionRevision = getGitCommitCount();

    logger.info("Revision ${revision}")
    logger.info("Version revision ${versionRevision}")

    //change this to
    // current version code de:  679477248
    // current version code  it: 274726912
    // current version code mx: 408944640

    // 2100000000 maximum version code number
    // base to be updatable: 680000000

    appVersionCodeDE = appVersionCodeIT = appVersionCodeMX = appVersionCodeUS = getVersionCode(ext.versionRevision)
    appVersionNameDE = getVersionName(appVersionMajorDE, appVersionMinorDE, appVersionPatchDE)
    appVersionNameIT = getVersionName(appVersionMajorIT, appVersionMinorIT, appVersionPatchIT)
    appVersionNameMX = getVersionName(appVersionMajorMX, appVersionMinorMX, appVersionPatchMX)
    appVersionNameUS = getVersionName(appVersionMajorUS, appVersionMinorUS, appVersionPatchUS)

    buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
    isJenkins = System.getenv("JENKINS_HOME") != null
    preDexEnabled = "true".equals(System.getProperty("pre-dex", "true")) && !isJenkins

    // a couple of settings that speed up local debug builds
    debugOptimizations = project.hasProperty("debugOptimizations") ? debugOptimizations.toBoolean() : true
    debugMinifyEnabled = isJenkins || !debugOptimizations
    debugShrinkResourcesEnabled = isJenkins || !debugOptimizations
    debugTestCoverageEnabled = isJenkins || !debugOptimizations

    // override this with -PsendExternalPartners=true to inform external-testers about new version
    sendExternalPartners = project.hasProperty("sendExternalPartners") ? sendExternalPartners.toBoolean() : false
    // override this with -PisProduction=true to create publishable release builds
    isProduction = project.hasProperty("isProduction") ? isProduction.toBoolean() : false
    // override this with -PisBeta=true to enable debug screen in production build without enviroment switcher
    isBeta = project.hasProperty("isBeta") ? isBeta.toBoolean() : false
    // override this with -PisProximityActivated=true to create publishable release builds
    isProximityActivated = project.hasProperty("isProximityActivated") ? isProximityActivated.toBoolean() : true
    //for releases without proximity change this default value to false

    versions = [
            android: [
                    buildTools  : '26.0.0-rc2',
                    compileSdk  : 'android-O',
                    javaVersion : JavaVersion.VERSION_1_8,
                    minSdk      : 16,
                    productNameMinSdk: 18,
                    targetSdk   : 'O'
            ],
            libs   : [
                    androidanimations      : '1.1.3',
                    butterknife            : '8.4.0',
                    commonsCollections4    : '4.1',
                    conceal                : '1.1.3',
                    constraintLayout       : '1.0.2',
                    cupboard               : '2.1.4',
                    cupboardTools          : '0.2.0',
                    dagger                 : '2.10',
                    easing                 : '1.0.2',
                    eventbus               : '2.4.0',
                    firebase               : '10.2.1',
                    frodo                  : '0.8.2',
                    glide                  : '3.7.0',
                    glideOkhttp3Integration: '1.4.0',
                    gson                   : '2.8.0',
                    joda                   : '2.9.3',
                    jsr250                 : '1.0',
                    leakcanary             : '1.4-beta2',
                    libphonenumber         : '8.0.1',
                    materialprogressbar    : '1.1.6',
                    multidex               : '1.0.1',
                    nineoldandroids        : '2.4.0',
                    okhttp3                : '3.6.0',
                    playServices           : '10.2.1',
                    retrofit               : '2.2.0',
                    rxandroid2             : '2.0.1',
                    rxcupboard2            : '2.0',
                    rxjava2                : '2.0.8',
                    rxlifecycle            : '2.0.1',
                    rxlifecycleComponents  : '2.0.1',
                    support                : '25.3.1',
                    timber                 : '4.3.1',
                    validationKomensky     : '0.9.2',
                    zxing                  : '3.3.0',

                    // Only for test
                    dexmaker               : '2.2.0',
                    junit                  : '4.12',
                    mockito                : '2.3.0',
                    robolectric            : '3.2.2',
                    robolectricShadows     : '3.1.4',
                    spoon                  : '1.7.1',
            ]
    ]

    libraries = [
            androidanimations             : 'com.daimajia.androidanimations:library:' + versions.libs.androidanimations + '@aar',
            butterknife                   : 'com.jakewharton:butterknife:' + versions.libs.butterknife,
            butterknifeCompiler           : 'com.jakewharton:butterknife-compiler:' + versions.libs.butterknife,
            commonsCollections4           : 'org.apache.commons:commons-collections4:' + versions.libs.commonsCollections4,
            conceal                       : 'com.facebook.conceal:conceal:' + versions.libs.conceal + '@aar',
            cupboard                      : 'nl.qbusict:cupboard:' + versions.libs.cupboard,
            cupboardTools                 : 'nl.littlerobots:cupboard-tools:' + versions.libs.cupboardTools,
            dagger                        : 'com.google.dagger:dagger:' + versions.libs.dagger,
            daggerCompiler                : 'com.google.dagger:dagger-compiler:' + versions.libs.dagger,
            easing                        : 'com.daimajia.easing:library:' + versions.libs.easing + '@aar',
            eventbus                      : 'de.greenrobot:eventbus:' + versions.libs.eventbus,
            firebaseConfig                : 'com.google.firebase:firebase-config:' + versions.libs.firebase,
            firebaseMessaging             : 'com.google.firebase:firebase-messaging:' + versions.libs.firebase,
            frodo                         : 'com.fernandocejas.frodo:frodo-api:' + versions.libs.frodo,
            glide                         : 'com.github.bumptech.glide:glide:' + versions.libs.glide,
            glideOkhttp3Integration       : 'com.github.bumptech.glide:okhttp3-integration:' + versions.libs.glideOkhttp3Integration + '@aar',
            gson                          : 'com.google.code.gson:gson:' + versions.libs.gson,
            joda                          : 'net.danlew:android.joda:' + versions.libs.joda,
            jsr250                        : 'javax.annotation:jsr250-api:' + versions.libs.jsr250,
            leakcanary                    : 'com.squareup.leakcanary:leakcanary-android:' + versions.libs.leakcanary,
            leakcanaryNoOp                : 'com.squareup.leakcanary:leakcanary-android-no-op:' + versions.libs.leakcanary,
            libphonenumber                : 'com.googlecode.libphonenumber:libphonenumber:' + versions.libs.libphonenumber,
            materialprogressbar           : 'me.zhanghai.android.materialprogressbar:library:' + versions.libs.materialprogressbar,
            nineoldandroids               : 'com.nineoldandroids:library:' + versions.libs.nineoldandroids,
            okhttp3                       : 'com.squareup.okhttp3:okhttp:' + versions.libs.okhttp3,
            okhttp3LoggingInterceptor     : 'com.squareup.okhttp3:logging-interceptor:' + versions.libs.okhttp3,
            okhttp3Mockwebserver          : 'com.squareup.okhttp3:mockwebserver:' + versions.libs.okhttp3,
            playServicesAnalytics         : 'com.google.android.gms:play-services-analytics:' + versions.libs.playServices,
            playServicesLocation          : 'com.google.android.gms:play-services-location:' + versions.libs.playServices,
            retrofit                      : 'com.squareup.retrofit2:retrofit:' + versions.libs.retrofit,
            retrofitAdapterRxjava2        : 'com.squareup.retrofit2:adapter-rxjava2:' + versions.libs.retrofit,
            retrofitConverterGson         : 'com.squareup.retrofit2:converter-gson:' + versions.libs.retrofit,
            rxandroid2                    : 'io.reactivex.rxjava2:rxandroid:' + versions.libs.rxandroid2,
            rxcupboard2                   : 'nl.2312:rxcupboard2:' + versions.libs.rxcupboard2,
            rxjava2                       : 'io.reactivex.rxjava2:rxjava:' + versions.libs.rxjava2,
            rxlifecycle                   : 'com.trello.rxlifecycle2:rxlifecycle:' + versions.libs.rxlifecycle,
            rxlifecycleComponents         : 'com.trello.rxlifecycle2:rxlifecycle-components:' + versions.libs.rxlifecycleComponents,
            supportAnnotations            : 'com.android.support:support-annotations:' + versions.libs.support,
            supportAppcompat              : 'com.android.support:appcompat-v7:' + versions.libs.support,
            supportCardview               : 'com.android.support:cardview-v7:' + versions.libs.support,
            supportConstraintLayout       : 'com.android.support.constraint:constraint-layout:' + versions.libs.constraintLayout,
            supportGridlayout             : 'com.android.support:gridlayout-v7:' + versions.libs.support,
            supportCustomtabs             : 'com.android.support:customtabs:' + versions.libs.support,
            supportDesign                 : 'com.android.support:design:' + versions.libs.support,
            supportMultidex               : 'com.android.support:multidex:' + versions.libs.multidex,
            supportMultidexInstrumentation: 'com.android.support:multidex-instrumentation:' + versions.libs.multidex,
            supportRecyclerview           : 'com.android.support:recyclerview-v7:' + versions.libs.support,
            supportV4                     : 'com.android.support:support-v4:' + versions.libs.support,
            timber                        : 'com.jakewharton.timber:timber:' + versions.libs.timber,
            validationKomensky            : 'eu.inmite.android.lib:android-validation-komensky:' + versions.libs.validationKomensky,
            zxing                         : 'com.google.zxing:core:' + versions.libs.zxing,
            zxingAndroidIntegration       : 'com.google.zxing:android-integration:' + versions.libs.zxing,

            // Only for test
            dexmaker                      : 'com.linkedin.dexmaker:dexmaker:' + versions.libs.dexmaker,
            dexmakerMockito               : 'com.linkedin.dexmaker:dexmaker-mockito:' + versions.libs.dexmaker,
            junit                         : 'junit:junit:' + versions.libs.junit,
            mockito                       : 'org.mockito:mockito-core:' + versions.libs.mockito,
            robolectric                   : 'org.robolectric:robolectric:' + versions.libs.robolectric,
            robolectricShadowsCore        : 'org.robolectric:shadows-core-v22:' + versions.libs.robolectricShadows,
            robolectricShadowsHttpClient  : 'org.robolectric:shadows-httpclient:' + versions.libs.robolectric,
            robolectricShadowsMultidex    : 'org.robolectric:shadows-multidex:' + versions.libs.robolectric,
            robolectricShadowsPlayServices: 'org.robolectric:shadows-play-services:' + versions.libs.robolectric,
            robolectricShadowsSupportV4   : 'org.robolectric:shadows-support-v4:' + versions.libs.robolectric,
            spoon                         : 'com.squareup.spoon:spoon-client:' + versions.libs.spoon,
    ]

}
allprojects {
    // prevent evil gradle children fork proceses spawns from stealing focus
    tasks.withType(JavaForkOptions) {
        // Forked processes like GradleWorkerMain for tests won't steal focus!
        jvmArgs '-Djava.awt.headless=true'
    }

    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

subprojects {
    tasks.withType(JavaExec).all {  //FIXME settings are ignored
        systemProperty "http.proxyHost", System.getProperty('http.proxyHost')
        systemProperty "http.proxyPort", System.getProperty('http.proxyPort')
        systemProperty "http.proxyUser", System.getProperty('http.proxyUser')
        systemProperty "http.proxyPassword", System.getProperty('http.proxyPassword')
        systemProperty "https.proxyHost", System.getProperty('https.proxyHost')
        systemProperty "https.proxyPort", System.getProperty('https.proxyPort')
        systemProperty "https.proxyUser", System.getProperty('https.proxyUser')
        systemProperty "https.proxyPassword", System.getProperty('https.proxyPassword')
    }
    tasks.withType(Test).all {
        ignoreFailures isJenkins
        systemProperty "run-under-test", "true"
    }
}

private def getGitCommitCount() {
    try {
        return 'git rev-list --first-parent --count HEAD'.execute().text.trim() as Integer
    }
    catch (ignored) {
        return 0;
    }
}

private def getGitCommitHash() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    }
    catch (ignored) {
        return null;
    }
}

private def getVersionCode(rev) {
    return 680040000 + rev;
}

private def getVersionName(appVersionMajor, appVersionMinor, appVersionPatch) {
    return "${appVersionMajor}.${appVersionMinor}.${appVersionPatch}";
}

// this is needed until this is implemented: https://jira.sonarsource.com/browse/SONAR-4101
task combineTestResultsForSonarqube {
    group = "Reporting"
    description = "Copies test results from integration and unit tests into one specific directory where Sonarqube can pick them up."

    def flavorsWithTests = [
            "app" : ["payGermanyCompat"],
            "core": ["germany"],
            "pay" : ["germany"]
    ];
    def modules = flavorsWithTests.keySet()
    doLast {
        modules.each { module ->
            File combined = file("${module}/build/combined-test-results")
            if (combined.exists()) {
                combined.deleteDir()
            }
            combined.mkdirs();
            flavorsWithTests[module].each { flavor ->
                def testDirs = [file("${module}/build/test-results/${flavor}Debug/"),
                                file("${module}/build/outputs/androidTest-results/connected/flavors/$flavor/")];
                testDirs.each { testDir ->
                    if (!testDir.exists()) {
                        logging.captureStandardOutput LogLevel.WARN
                        println "WARNING: ignoring non-existant ${testDir.path}"
                        return;
                    }
                    files(testDir.listFiles()).each { file ->
                        new File(combined, file.getName()) << file.text
                    }
                }
            }
        }
    }
}
